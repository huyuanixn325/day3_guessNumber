package com.twschool.practice.api;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.http.MediaType;import org.springframework.test.context.junit4.SpringRunner;import org.springframework.test.web.servlet.MockMvc;import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;import org.springframework.test.web.servlet.result.MockMvcResultMatchers;/** * 功能描述 : GameControllerTest * * @Author : 于爽 * @Email : yushuang@zybank.com.cn * @Date : 2020/6/17 16:06 */@SpringBootTest@RunWith(SpringRunner.class)@AutoConfigureMockMvcpublic class GameControllerTest {    @Autowired    private MockMvc mockMvc;    @Test    public void should_return_guess_result() {        try {            mockMvc.perform(MockMvcRequestBuilders.get("/game")                    .contentType(MediaType.APPLICATION_JSON)                    .param("guess", "1 2 3 4"))                    .andExpect(MockMvcResultMatchers.status().isOk())                    .andExpect(MockMvcResultMatchers.jsonPath("$.input").value("1 2 3 4"))                    .andExpect(MockMvcResultMatchers.jsonPath("$.result").value("4A0B"));        } catch (Exception e) {            e.printStackTrace();        }    }    @Test    public void should_return_hostory() {        try {            mockMvc.perform(MockMvcRequestBuilders.get("/history")                    .contentType(MediaType.APPLICATION_JSON))                    .andExpect(MockMvcResultMatchers.status().isOk())                    .andExpect(MockMvcResultMatchers.jsonPath("$.result").value("Input:1 2 3 4    Output:4A0B"));        } catch (Exception e) {            e.printStackTrace();        }    }}